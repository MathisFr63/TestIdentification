@*Vue permettant la modification d'un devis*@
@model WebApplication1.ViewModels.DevisProduitViewModel

@{
    ViewBag.Title = "Edit";
}


@*Chemin de retour*@
<ul class="breadcrumb" style="margin-bottom:0px;margin-top:0px">
    <li class="breadcrumb-item">
        <a href=@Url.Action("Index","Devis")>Liste devis</a>
    </li>
    <li class="breadcrumb-item active">Modifier devis</li>
</ul>

@*titre de la partie*@
<h2 class="titreCRUD">Modifier le devis</h2>
<hr class="separer" />
<br />


@*Formulaire permettant de modifier les champs voulus*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*Div permettant de stocker l'identifiant du devis (sans l'afficher) afin de pouvoir l'utiliser ensuite*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Devis.ID)

        @*Div permettant la modification de l'objet du devis*@
        <div class="form-group">
            @Html.LabelFor(model => model.Devis.Objet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Devis.Objet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Devis.Objet, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Div permettant la modification de la monnaie utilisée par le devis*@
        <div class="form-group">
            @Html.LabelFor(model => model.Devis.Monnaie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Devis.Monnaie, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Devis.Monnaie, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Div permettant la modification du commentaire lié au devis*@
        <div class="form-group">
            @Html.LabelFor(model => model.Devis.Commentaire, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Devis.Commentaire, new { @class = "form-control textAreaCSS" })
                @Html.ValidationMessageFor(model => model.Devis.Commentaire, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <h3>Informations articles:</h3>
        <hr />
        @*Div permettant la modification des produits que possède le devis*@
        <div class="form-group col-md-12">
            <div class="multiselect">
                <div class="selectBox" onclick="showCheckboxes()">
                    <select>
                        <option>Select an option</option>
                    </select>
                    <div class="overSelect"></div>
                </div>
                <div id="checkboxes" style="display: block;">
                    @foreach (var item in Model.Produits)
                    {
                        <label>
                            <input type="checkbox" onclick="toggleArticle('@item.Text')" id='@item.Text input' />@item.Text
                        </label>
                    }
                </div>
            </div>

            <div id="articles" class="col-md-6"></div>
        </div>

        @*Script permettant de sélectionner la quantité voulue pour chaque produit du devis*@
        @foreach (var item in Model.ProduitsSelected)
        {
            <text>
                <script type="text/javascript">
                    toggleArticleEdit("@item.Nom", @item.Quantite);
                    document.getElementById("@item.Nom input").checked = true;
                </script>
            </text>
        }

        @*Bouton permettant de valider la modification du devis (sauvegarder les modification) ou de facturer le devis*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sauvegarder" class="btn btn-default btn-primary" />
                <button type="reset" value="Facturer" onclick="location.href='@Url.Action("Facturer", "Devis",new { id = Model.Devis.ID })'" class="btn btn-default btn-secondary">Facturer</button>
            </div>
        </div>
    </div>
}
