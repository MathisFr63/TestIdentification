@*Vue permettant l'affichage des devis de l'utilisateur*@
@model PagedList.IPagedList<WebApplication1.Models.Papiers.Devis>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Devis";
    var type = (new WebApplication1.DAL.ApplicationContext()).ObtenirUtilisateur(System.Web.HttpContext.Current.User.Identity.Name).Type;
    var isAdmin = type == WebApplication1.Models.Account.TypeUtilisateur.Administrateur || type == WebApplication1.Models.Account.TypeUtilisateur.SA;
}

<h2 class="titreIndex">
    Vos devis
</h2>

@*Navbar permettant de trier et de faire une recherche sur la liste des devis.*@
<nav class="navbar navbar-default">
    <div class="container-fluid">

        @*Formulaire permettant de rechercher un devis*@
        <form class="navbar-form navbar-left" method="get" role="search" action="/Devis/Index">
            @using (Html.BeginForm("Index", "Devis", FormMethod.Get))
            {
                <div class="form-group">
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { placeholder = "Objet", @class = "searchBar" })
                    <button type="submit" value="Search" title="Recherche Basique" class="btn btn-default"><i class="glyphicon glyphicon-search"></i></button>
                    <button type="reset" value="cancel" title="Annuler la Recherche" onclick="location.href='@Url.Action("Index", "Devis")'" class="btn btn-default"><i class="glyphicon glyphicon-remove"></i></button>
                    <button type="reset" value="a" title="Recherche Avancée" onclick="avancée();" class="btn btn-default"><i class="glyphicon glyphicon-th-list"></i></button>
                    <a title="Imprimer la liste des Devis" target="_blank" href=@Url.Action("ListToPdf", "Devis") class="btn btn-default"><span class="glyphicon glyphicon-print" /></a>

                </div>
            }
        </form>

        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav navbar-right" style="margin-top: 8px;">
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" style="padding-bottom:5px;padding-top:5px;" data-toggle="dropdown">Trier par<b class="caret"></b></a>
                    <ul class="dropdown-menu dropdown-menu-default trie">
                        <li>@Html.ActionLink("Objet ↑", "Index", new { sortOrder = "objetAZ", searchString = ViewBag.CurrentFilter as string })</li>
                        <li>@Html.ActionLink("Objet ↓", "Index", new { sortOrder = "objetZA", searchString = ViewBag.CurrentFilter as string })</li>
                        <li>@Html.ActionLink("Date ↑", "Index", new { sortOrder = "dateNewOld", searchString = ViewBag.CurrentFilter as string })</li>
                        <li>@Html.ActionLink("Date ↓", "Index", new { sortOrder = "dateOldNew", searchString = ViewBag.CurrentFilter as string })</li>
                    </ul>
                </li>

                @*Bouton permettant d'accéder à la page de création d'un devis*@
                @if (isAdmin)
                {
                    <li>
                        <button type="reset" value="cancel" title="Créer un Nouveau Devis" onclick="location.href='@Url.Action("Create", "Devis")'" class="btn button-green"><i class="glyphicon glyphicon-plus"></i></button>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>
<br />

@*Affichage de la liste des devis*@
<table class="table">
    @using (Html.BeginForm("RechercheAvancee", "Devis", FormMethod.Get))
    {
        <tr id="listAvancée" style="display: none">
            <th>
                <input type="text" name="Objet" placeholder="Objet" class="searchBar" value="" />
            </th>
            <th>
                <input type="text" name="Date" placeholder="Date" class="searchBar" value="" />
            </th>
            <th>
                <input type="text" name="Valide" placeholder="Valide" class="searchBar" value="" />
            </th>
            <th>
                <input type="text" name="Produit" placeholder="Produit" class="searchBar" value="" />
            </th>
            <th>
                <input type="text" name="TotalHT" placeholder="Total HT" class="searchBar" value="" />
            </th>
            <th>
                <button type="submit" value="Search" class="btn button-bluedark">
                    <span class="glyphicon glyphicon-search" />
                </button>
            </th>
        </tr>
    }
    <tr>
        <th>Objet</th>
        <th>Date</th>
        <th>Valide</th>
        @*<th>Commentaire</th>
            <th>Monnaie</th>*@
        <th>Produits</th>
        <th>Total TTC</th>
        <th></th>
    </tr>
    @*Pour chaque devis, affichage de l'objet, de la date de création, et de la validité*@
    @*En plus, ajouter à droite de chaque devis 3 boutons permettant de modifier, afficher les détails et supprimer le devis*@
    @foreach (var item in Model)
    {
        <tr>
            <td>
                <a title="Détails" href=@Url.Action("Details", "Devis", new { id = item.ID }) class="detail">
                    @Html.DisplayFor(modelItem => item.Objet)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateString)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Valide)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Commentaire)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Monnaie)
                </td>*@
            <td>
                @if (item.Produits.Count() >= 3)
                {

                    <p>@item.Produits.ToList()[0].Nom, @item.Produits.ToList()[1].Nom, @item.Produits.ToList()[2].Nom, ...</p>
                }
                else if (item.Produits.Count() < 3 && item.Produits.Count() > 1)
                {
                    <p>@item.Produits.ToList()[0].Nom, @item.Produits.ToList()[1].Nom</p>
                }
                else if (item.Produits.Count() == 1)
                {
                    <p>@item.Produits.ToList()[0].Nom</p>
                }
                else
                {
                    <p>Aucun produit</p>
                }
            </td>
            <td>
                @{
                    double somme = 0;
                    foreach (var p in item.Produits)
                    {
                        double PrixTTC = p.PrixHT + p.PrixHT * p.TVA / 100;
                        double reduc = PrixTTC * p.Reduction / 100;
                        somme += PrixTTC * p.Quantite - reduc;
                    }
                    <p>@String.Format("  {0:F2}", somme) €</p>
                }
            </td>
            <td>
                <button title="Facturer devis" value="Facturer" class="btn button-bluedark" onclick="location.href='@Url.Action("Facturer", "Devis", new { id = item.ID })'">
                    <span class="fas fa-cart-arrow-down" />
                </button>
                <a title="Imprimer le devis" target="_blank" href=@Url.Action("DevisToPdf", "Devis", new { id = item.ID }) class="btn button-blue"><span class="glyphicon glyphicon-print" /></a>
                @if (isAdmin)
                {
                    <button title="Modifier" onclick="location.href='@Url.Action("Edit", "Devis", new { id = item.ID })'" class="btn button-orange">
                        <span class="glyphicon glyphicon-pencil" />
                    </button>
                    <button title="Supprimer devis'" class="btn button-delete deleteButton" onclick='togglePopup("@item.Objet", "@item.ID")'>
                        <span class="glyphicon glyphicon-trash" />
                    </button>
                }
            </td>
        </tr>
    }
</table>

<br />

@*Partie permettant d'afficher et de se diriger sur les différentes pages s'il y en a plusieurs*@
@if (!Model.PageCount.Equals(1))
{
    <div class="text-center">

        @Html.PagedListPager(Model, page => Url.Action("Index",
                   new
                   {
                       page,
                       sortOrder = ViewBag.CurrentSort,
                       currentFilter = ViewBag.CurrentFilter
                   }))
    </div>
}




<div class="popup">
    <div class="popDisplay">
        <!-- popup content start || copy this to the end of the file-->
        <div class="popupWindow">
            <div class="popupDiv">
                <div style="display:flex;"><p class="confirm-message text-lg">Voulez-vous vraiment supprimer &nbsp;</p> <p class="text-lg" id="popup_txt"></p><p class="text-lg">&nbsp; ?</p></div>
                <div class="buttons">
                    <form method="post" id="formUser">
                        @Html.AntiForgeryToken()
                        <button class="button button-green button-confirm">Confimer</button>
                    </form>
                    <button class="button button-delete button-cancel" type="button">Annuler</button>
                </div>
            </div>
        </div>
    </div>
</div>  <!-- popup content ends -->

<script type="text/javascript">
    $(document).ready(function () {
        $(".button-confirm").click(function () {
            $(".popup").fadeOut(600);
        });

        $(".button-cancel").click(function () {
            $(".popup").fadeOut(600);
        });
    });

    function togglePopup(name, id) {
        $(".popup").fadeIn(600);
        document.getElementById("popup_txt").innerHTML = name;
        document.getElementById("formUser").action = "/Devis/Delete/" + id;
    }
</script>