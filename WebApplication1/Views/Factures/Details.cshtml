@*Vue permettant d'afficher les détails d'une facture*@
@model WebApplication1.ViewModels.FactureProduitViewModel

@{
    ViewBag.Title = "Details";
    var type = (new WebApplication1.DAL.ApplicationContext()).ObtenirUtilisateur(System.Web.HttpContext.Current.User.Identity.Name).Type;
    var isAdmin = type == WebApplication1.Models.Account.TypeUtilisateur.SA || type == WebApplication1.Models.Account.TypeUtilisateur.Administrateur;
}

@*Chemin de retour*@
<ul class="breadcrumb" style="margin-bottom:0px;margin-top:0px">
    <li class="breadcrumb-item">
        <a href=@Url.Action("Index","Factures")>Liste factures</a>
    </li>
    <li class="breadcrumb-item active">Informations facture</li>
</ul>


@*titre partie*@
<div class="titrepartie">

    <ul style="list-style: none; display:block; float: right!important; margin-bottom:0;">
        <li>
            <a title="Imprimer la facture" target="_blank" href=@Url.Action("FactureToPdf", "Factures", new { id = Model.Facture.ID }) class="btn button-blue btn-lg"><span class="glyphicon glyphicon-print" /></a>
        </li>
    </ul>
    <h2 style="display:block;" class="titreCRUD">
        Informations sur la facture
    </h2>
</div>
<hr class="separer" />
<br />

@*Div permettant d'afficher les détails du Facture*@
<div class="section">
    <div class="section-header">
        <h2 class="section-title">Informations facturation</h2>
    </div>
    <div class="contact">
        @*<div class="contact-item contact-item-large">
            <div class="contact-label">Statut</div>
            <div class="contact-content">Payée</div>
        </div>*@

        <div class="contact-item">
            <div class="contact-label">@Html.LabelFor(model => model.Facture.Identifiant)</div>
            <div class="contact-content">@Model.Facture.Identifiant</div>
        </div>

        <div class="contact-item">
            <div class="contact-label"><label>Par</label></div>
            <div class="contact-content">@Html.DisplayFor(model => model.Facture.UtilisateurID)</div>
            @*<div class="contact-content">@Model.Devis.Identifiant</div>*@
        </div>

        <div class="contact-item">
            <div class="contact-label"><label>Pour</label></div>
            <div class="contact-content">@Html.DisplayFor(model => model.Facture.ClientID)</div>
            @*<div class="contact-content">@Model.Devis.Identifiant</div>*@
        </div>

        <div class="contact-item">
            <div class="contact-label"><label>Facturée le</label></div>
            <div class="contact-content"> @string.Format("{0:dd MMMM yyyy}", Model.Facture.Date) à @string.Format("{0:hh:mm}", Model.Facture.Date)</div>
        </div>

        <div class="contact-item">
            <div class="contact-label"><label>@Html.LabelFor(model => model.Facture.Commentaire)</label></div>
            @{
            var info = String.IsNullOrWhiteSpace(Model.Facture.Commentaire) ? "Aucune" : Model.Facture.Commentaire;
            }
            <div class="contact-content">@info</div>
        </div>
    </div>
    <div class="buttons buttons-small"></div>
</div>



@*Div permettant d'afficher les détails du Facture*@
<div class="section">
    <div class="section-header">
        <h2 class="section-title">Détail produits</h2>
    </div>
    <div class="contact col-md-12">

        <div class="contact-item contact-item-large">
            <div class="contact-content col-md-2">Nom du produit</div>
            <div class="contact-content col-md-2">Prix HT</div>
            <div class="contact-content col-md-1">Quantité</div>
            <div class="contact-content col-md-2">Total HT</div>
            <div class="contact-content col-md-1">TVA</div>
            <div class="contact-content col-md-2">Total TTC</div>
        </div>


        @{
            if (Model.Facture.Produits != null)
            {
                foreach (var p in Model.Facture.Produits)
                {
                    <div class="contact-item contact-item-large">
                        <div class="contact-label col-md-2">@p.Nom</div>
                        <div class="contact-label col-md-2">@p.PrixHT €</div>
                        <div class="contact-label col-md-1">@p.Quantite</div>
                        <div class="contact-label col-md-2">@p.TotalHT €</div>
                        <div class="contact-label col-md-1">@p.TVA %</div>
                        <div class="contact-label col-md-2">@p.TotalTTC €</div>
                    </div>
                }
            }
        }
    </div>
    <div class="buttons buttons-small"></div>
</div>



@*Div permettant d'afficher les détails du Facture*@
<div class="section">
    <div class="section-header">
        <h2 class="section-title">Detail règlement</h2>
    </div>
    <div class="contact">
        @*<div class="contact-item contact-item-large">
                <div class="contact-label">Statut</div>
                <div class="contact-content">Payée</div>
            </div>*@

        @*<div class="contact-item">
            <div class="contact-label">Monnaie utilisée</div>
            <div class="contact-content">@Html.DisplayFor(model => model.Facture.Monnaie)</div>
        </div>*@
        @*calcul du montant total TTC*@
        @{

            double sommeTTC = 0;
            double sommeHT = 0;
            double totalReduc = 0;

            if (Model.Facture.Produits != null)
            {
                foreach (var p in Model.Facture.Produits)
                {
                    double PrixTTC = p.PrixHT + p.PrixHT * p.TVA / 100;
                    double reduc = PrixTTC * p.Reduction / 100;
                    sommeTTC += PrixTTC * p.Quantite - reduc;
                    sommeHT += p.PrixHT * p.Quantite - reduc;
                    totalReduc += reduc;
                }
            }
            double totalTaxe = sommeTTC - sommeHT;
        }
        <div class="contact-item">
            <div class="contact-label"><label>Prix total HT</label></div>
            <div class="contact-content">@string.Format("  {0:F2}", sommeHT) €</div>
        </div>
        <div class="contact-item">
            <div class="contact-label"><label>Prix total TTC</label></div>
            <div class="contact-content">@string.Format("  {0:F2}", sommeTTC) €</div>
        </div>
        <div class="contact-item">
            <div class="contact-label"><label>Taxe</label></div>
            <div class="contact-content">@string.Format("  {0:F2}", totalTaxe) €</div>
        </div>
        <div class="contact-item">
            <div class="contact-label"><label>Total réduction</label></div>
            <div class="contact-content">@string.Format("  {0:F2}", totalReduc) €</div>
        </div>

        <div class="contact-item">
            <div class="contact-label"><label>Mode de règlement</label></div>
            <div class="contact-content">@Html.DisplayFor(model => model.Facture.Reglement)</div>
        </div>

        @*<div class="contact-item">
                <div class="contact-label">Nombre de relances</div>
                <div class="contact-content">@Html.DisplayFor(model => model.Facture.Relances)</div>
            </div>*@

    </div>
    @*@if (isAdmin)
        {
            <a href=@Url.Action("Relancer", "Factures", new { id = Model.Facture.ID }) class="button button-red">Relancer</a>
        }*@
</div>


@*@if (ViewBag.ErreurRelance != null && ViewBag.ErreurRelance == true)
    {
        <script type="text/javascript">
            alert("Nombre de relance déjà au maximum");
        </script>
    }*@
