@*Vue permettant l'affichage des factures de l'utilisateur*@
@model PagedList.IPagedList<WebApplication1.Models.Papiers.Facture>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Facture";
    var type = (new WebApplication1.DAL.ApplicationContext()).ObtenirUtilisateur(System.Web.HttpContext.Current.User.Identity.Name).Type;
    var isAdmin = type == WebApplication1.Models.Account.TypeUtilisateur.Administrateur || type == WebApplication1.Models.Account.TypeUtilisateur.SA;
}

<h2 class="titreIndex">
    Vos factures
</h2>


@*Navbar permettant de trier et de faire une recherche sur la liste des factures.*@
<nav class="navbar navbar-default">
    <div class="container-fluid">

        <form class="navbar-form navbar-left" method="get" role="search">
            @using (Html.BeginForm("Index", "Factures", FormMethod.Get))
            {
                <div class="form-group">
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { placeholder = "Numéro", @class = "searchBar" })
                    <button type="submit" title="Recherche Basique" value="Search" class="btn btn-default"><i class="glyphicon glyphicon-search"></i></button>
                    <button type="reset" title="Annuler la Recherche" value="cancel" onclick="location.href='@Url.Action("Index", "Factures")'" class="btn btn-default"><i class="glyphicon glyphicon-remove"></i></button>
                    <button type="reset" value="a" title="Recherche Avancée" onclick="avancée();" class="btn btn-default"><i class="glyphicon glyphicon-th-list"></i></button>
                    <a title="Imprimer la liste des Factures" target="_blank" href=@Url.Action("ListToPdf", "Factures") class="btn btn-default"><span class="glyphicon glyphicon-print" /></a>
                </div>
            }
        </form>

        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav navbar-right" style="margin-top: 8px;">
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" style="padding-bottom:5px;padding-top:5px;" data-toggle="dropdown">Trier par<b class="caret"></b></a>
                    <ul class="dropdown-menu dropdown-menu-default trie">
                        <li>@Html.ActionLink("Numéro ↑", "Index", new { sortOrder = "numeroAZ", searchString = ViewBag.CurrentFilter as string })</li>
                        <li>@Html.ActionLink("Numéro ↓", "Index", new { sortOrder = "numeroZA", searchString = ViewBag.CurrentFilter as string })</li>
                        <li>@Html.ActionLink("Date ↑", "Index", new { sortOrder = "dateNewOld", searchString = ViewBag.CurrentFilter as string })</li>
                        <li>@Html.ActionLink("Date ↓", "Index", new { sortOrder = "dateOldNew", searchString = ViewBag.CurrentFilter as string })</li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>
</nav>
<br />

@*Affichage de la liste des factures*@
<table class="table">
    @using (Html.BeginForm("RechercheAvancee", "Factures", FormMethod.Get))
    {
        <tr id="listAvancée" style="display: none">
            <th>
                <input type="text" name="Objet" placeholder="Numéro" class="searchBar" value="" />
            </th>
            <th>
                <input type="text" name="Date" placeholder="Date" class="searchBar" value="" />
            </th>
            <th>
                <input type="text" name="Produit" placeholder="Produit" class="searchBar" value="" />
            </th>
            <th>
                <input type="text" name="Relance" placeholder="Relance" class="searchBar" value="" />
            </th>
            <th>
                <input type="text" name="Reglement" placeholder="Reglement" class="searchBar" value="" />
            </th>
            <th>
                <button type="submit" value="Search" class="btn button-bluedark">
                    <span class="glyphicon glyphicon-search" />
                </button>
            </th>
        </tr>
    }
    <tr>
        <th>Numéro</th>
        <th>Date</th>
        @*<th>Commentaire</th>
            <th>Monnaie</th>*@
        <th>Produits</th>
        <th>Prix TTC</th>
@*        <th>Relances</th>*@
        <th>Reglement</th>
        <th></th>
    </tr>

    @*Pour chaque facture, affichage de l'objet, de la date de création, de la liste des produits(et de leur quantité), du nombre de relances et du type de règlement*@
    @*En plus, ajouté à droite de chaque devis 3 boutons permettant de modifier, afficher les détails et supprimer le devis*@
    @foreach (var item in Model)
    {
        <tr>
            <td>
                <a title="Détails" href=@Url.Action("Details", "Factures", new { id = item.ID }) class="detail">
                    @Html.DisplayFor(modelItem => item.Identifiant)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateString)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Commentaire)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Monnaie)
                </td>*@
            <td>
                @if (item.Produits.Count() >= 3)
                {

                    <p>@item.Produits.ToList()[0].Nom, @item.Produits.ToList()[1].Nom, @item.Produits.ToList()[2].Nom, ...</p>
                }
                else if (item.Produits.Count() < 3 && item.Produits.Count() > 1)
                {
                    <p>@item.Produits.ToList()[0].Nom, @item.Produits.ToList()[1].Nom</p>
                }
                else if (item.Produits.Count() == 1)
                {
                    <p>@item.Produits.ToList()[0].Nom</p>
                }
                else
                {
                    <p>Aucun produit</p>
                }
            </td>
            <td>
                @{
                    double somme = 0;
                    foreach (var p in item.Produits)
                    {
                        double PrixTTC = p.PrixHT + p.PrixHT * p.TVA / 100;
                        double reduc = PrixTTC * p.Reduction / 100;
                        somme += PrixTTC * p.Quantite - reduc;
                    }
                    <p>@String.Format("  {0:F2}", somme) €</p>
                }
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Relances)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Reglement)
            </td>
            <td>
                @*@if (isAdmin)
                {
                    if (item.Relances < 3)
                    {
                        <a title="Relancer la facture" href=@Url.Action("Relancer", "Factures", new { id = item.ID }) class="btn button-red"><span class="fas fa-sync-alt" /></a>
                    }
                    else
                    {
                        <a title="Limite atteinte !" class="btn button-red isDisabled"><span class="fas fa-sync-alt" /></a>
                    }
                }*@
                <a title="Details Factures" href=@Url.Action("Details", "Factures", new { id = item.ID }) class="btn button-orange">
                    <span class="glyphicon glyphicon-file" />
                </a>
                <a title="Imprimer la Facture" target="_blank" href=@Url.Action("FactureToPdf", "Factures", new { id = item.ID }) class="btn button-blue"><span class="glyphicon glyphicon-print" /></a>
            </td>
        </tr>
    }

</table>

<br />

@*Partie permettant d'afficher et de se diriger sur les différentes pages s'il y en a plusieurs*@
@if (!Model.PageCount.Equals(1))
{
    <div class="text-center">

        @Html.PagedListPager(Model, page => Url.Action("Index",
                   new
                   {
                       page,
                       sortOrder = ViewBag.CurrentSort,
                       currentFilter = ViewBag.CurrentFilter
                   }))
    </div>
}