@*Vue permettant l'affichage des feedbacks envoyés aux administrateurs*@
@model PagedList.IPagedList<WebApplication1.Models.Account.Feedback>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Feedback";
}



@*Navbar permettant de trier et de faire une recherche sur la liste des feedbacks.*@
<nav class="navbar navbar-default">
    <div class="container-fluid">

        <form class="navbar-form navbar-left" method="get" role="search">
            @using (Html.BeginForm("Index", "Feedbacks", FormMethod.Get))
            {
                <div class="form-group">
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { placeholder = "recherche par sujet", @class = "searchBar" })
                    <button type="submit" value="Search" title="Recherche Basique" class="btn btn-default"><i class="glyphicon glyphicon-search"></i></button>
                    <button type="reset" value="cancel" title="Annuler la Recherche" onclick="location.href='@Url.Action("Index", "Feedbacks")'" class="btn btn-default"><i class="glyphicon glyphicon-remove"></i></button>
                    <button type="reset" value="a" title="Recherche Avancée" onclick="avancée();" class="btn btn-default"><i class="glyphicon glyphicon-th-list"></i></button>
                    <a title="Imprimer la liste des Feedbacks" target="_blank" href=@Url.Action("PrintList", "Feedbacks") class="btn btn-default"><span class="glyphicon glyphicon-print" /></a>
                </div>
            }
        </form>

        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav navbar-right" style="margin-top: 8px;">
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" style="padding-bottom:5px;padding-top:5px;" data-toggle="dropdown">Trier par<b class="caret"></b></a>
                    <ul class="dropdown-menu dropdown-menu-default trie">
                        <li style="background-color: white;">@Html.ActionLink("Enrollment Date", "Index", new { sortOrder = ViewBag.DateSortParm })</li>
                        <li style="background-color: white;">@Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm })</li>
                        <li style="background-color: white;"><a href="#">Nb factures</a></li>
                    </ul>
                </li>
                <li>
                    <button type="reset" value="cancel" title="Créer un Nouveau Feedback" onclick="location.href='@Url.Action("Create", "Feedbacks")'" class="btn button-green"><i class="glyphicon glyphicon-plus"></i></button>
                </li>
            </ul>
        </div>
    </div>
</nav>
<br />

@*Affichage de la liste des feedbacks*@
<table class="table">
    @using (Html.BeginForm("RechercheAvancee", "Feedbacks", FormMethod.Get))
    {
        <tr id="listAvancée" style="display: none">
            <th>
                <input type="text" name="Nom" placeholder="Nom" class="searchBar" value="" />
            </th>
            <th>
                <input type="text" name="Mail" placeholder="Adresse mail" class="searchBar" value="" />
            </th>
            <th>
                <input type="text" name="Sujet" placeholder="Sujet" class="searchBar" value="" />
            </th>
            <th>
                <input type="text" name="Résolu" placeholder="Résolu" class="searchBar" value="" />
            </th>
            <th>
                <button type="submit" value="Search" class="btn button-bluedark">
                    <span class="glyphicon glyphicon-search" />
                </button>
            </th>
        </tr>
    }
    <tr>
        <th>Nom</th>
        <th>Adresse mail</th>
        <th>Sujet</th>
        <th>Résolu ?</th>
        <th></th>
    </tr>
    @*Pour chaque feedback, affichage du nom de l'utilisateur, de son identifiant, du sujet du feedback, du commentaire lui étant lié et de son état*@
    @*En plus, ajouté à droite de chaque devis 3 boutons permettant de modifier l'état, afficher les détails et supprimer le feedback*@
    @foreach (var item in Model)
    {
        <tr>
            @*Affichage du nom de l'utilisateur ayant envoyé le feedback*@
            <td>
                <a class="detail" href=@Url.Action("Details", "Feedbacks", new { id = item.ID })>@Html.DisplayFor(modelItem => item.userName)</a>
            </td>

            @*Affichage de l'identifiant de l'utilisateur ayant envoyé le feedback*@
            <td>
                <a class="detail" href=@Url.Action("Details", "Feedbacks", new { id = item.ID })>@Html.DisplayFor(modelItem => item.UtilisateurID)</a>
            </td>

            @*Affichage du sujet du feedback*@
            <td>
                <a class="detail" href=@Url.Action("Details", "Feedbacks", new { id = item.ID })>@Html.DisplayFor(modelItem => item.Subject)</a>
            </td>

            @*Affichage de l'état du feedback*@
            <td>
                @if (item.IsResolved)
                {
                    <span class="glyphicon glyphicon-ok" style="color:green;display: flex;justify-content: center;" aria-hidden="true"></span>
                }
                else
                {
                    <span class="glyphicon glyphicon-remove" style="color:red;display: flex;justify-content: center;" aria-hidden="true"></span>
                }

            </td>
            <td>
                <a title="Consulter" href=@Url.Action("Details", "Feedbacks", new { id = item.ID }) class="btn button-fluo">
                    <span class="glyphicon glyphicon-file" />
                </a>
                <a title="Check" href=@Url.Action("Check", "Feedbacks", new { id = item.ID }) class="btn button-pink">
                    <span class="glyphicon glyphicon-check" />
                </a>
                <a title="Imprimer le Feedback" target="_blank" href=@Url.Action("Print", "Feedbacks", new { id = item.ID }) class="btn button-blue"><span class="glyphicon glyphicon-print" /></a>
                <button title="Supprimer produits'" class="btn button-delete deleteButton" onclick='togglePopup("@item.Subject", "@item.ID")'>
                    <span class="glyphicon glyphicon-trash" />
                </button>
            </td>
        </tr>
    }
</table>

<br />

@*Partie permettant d'afficher et de se diriger sur les différentes pages s'il y en a plusieurs*@
@if (!Model.PageCount.Equals(1))
{
    <div class="text-center">

        @Html.PagedListPager(Model, page => Url.Action("Index",new{page,sortOrder = ViewBag.CurrentSort,currentFilter = ViewBag.CurrentFilter}))
    </div>
}




<div class="popup">
    <div class="popDisplay">
        <!-- popup content start || copy this to the end of the file-->
        <div class="popupWindow">
            <div class="popupDiv">
                <div style="display:flex;"><p class="confirm-message text-lg">Voulez-vous vraiment supprimer &nbsp;</p> <p class="text-lg" id="popup_txt"></p><p class="text-lg">&nbsp; ?</p></div>
                <div class="buttons">
                    <form method="post" id="formUser">
                        @Html.AntiForgeryToken()
                        <button class="button button-green button-confirm">Confimer</button>
                    </form>
                    <button class="button button-delete button-cancel" type="button">Annuler</button>
                </div>
            </div>
        </div>
    </div>
</div>  <!-- popup content ends -->

<script type="text/javascript">
    $(document).ready(function () {
        $(".button-confirm").click(function () {
            $(".popup").fadeOut(600);
        });

        $(".button-cancel").click(function () {
            $(".popup").fadeOut(600);
        });
    });

    function togglePopup(name, id) {
        $(".popup").fadeIn(600);
        document.getElementById("popup_txt").innerHTML = name;
        document.getElementById("formUser").action = "/Feedbacks/Delete/" + id;
    }
</script>