@*Vue permettant la modification d'un utilisateur*@
@model WebApplication1.ViewModels.UtilisateurViewModelConnection
@{
    ViewBag.Title = "Edit";
}

@*Chemin de retour*@
<ul class="breadcrumb" style="margin-bottom:0px;margin-top:0px">
    <li class="breadcrumb-item">
        <a href=@Url.Action("Index", "Utilisateurs")>Liste utilisateurs</a>
    </li>
    <li class="breadcrumb-item active">Modifier utilisateur</li>
</ul>



@*Formulaire permettant de modifier les champs voulus*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h2 class="titreCRUD">Modifier l'utilisateur @Html.DisplayFor(model => model.Utilisateur.Prénom) @Html.DisplayFor(model => model.Utilisateur.Nom)</h2>
    <hr class="separer" />
    <br />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @*Div permettant la modification de l'identifiant (adresse e-mail) de l'utilisateur*@
    <div>
        @Html.LabelFor(model => model.Utilisateur.ID, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Utilisateur.ID, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
    </div>

    @*Div permettant de modifier le nom de l'utilisateur*@
    <div>
        @Html.LabelFor(model => model.Utilisateur.Nom, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Utilisateur.Nom, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
    </div>

    @*Div permettant de modifier le prénom de l'utilisateur*@
    <div>
        @Html.LabelFor(model => model.Utilisateur.Prénom, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Utilisateur.Prénom, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
    </div>

    @*Div permettant de modifier le type de l'utilisateur*@
    @if (Model.Utilisateur.Type != WebApplication1.Models.Account.TypeUtilisateur.SA)
    {
        <div>
            @Html.LabelFor(model => model.Utilisateur.Type, htmlAttributes: new { @class = "control-label" })
            @{
                var selectList = Enum.GetValues(typeof(WebApplication1.Models.Account.TypeUtilisateur))
                        .Cast<WebApplication1.Models.Account.TypeUtilisateur>()
                        .Where(e => e != WebApplication1.Models.Account.TypeUtilisateur.SA && e != WebApplication1.Models.Account.TypeUtilisateur.EnAttente)
                        .Select(e => new SelectListItem
                        {
                            Value = e.ToString(),
                            Text = e.ToString()
                        });
            }
            @Html.DropDownListFor(m => m.Utilisateur.Type, selectList, new { @class = "form-control" })
        </div>
    }

    <hr class="separerEdit" />

    @*Div permettant de modifier le lieu de l'utilisateur*@
    @*<h2>Lieu</h2>*@

    @*Div permettant de modifier l'adresse du lieu de l'utilisateur*@
    <div>
        @Html.LabelFor(model => model.Lieu.Adresse, htmlAttributes: new { @class = "control-label" })*
        @Html.EditorFor(model => model.Lieu.Adresse, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
    </div>

    @*Div permettant de modifier le complément du lieu de l'utilisateur*@
    <div>
        @Html.LabelFor(model => model.Lieu.Complement, htmlAttributes: new { @class = "control-label" })*
        @Html.EditorFor(model => model.Lieu.Complement, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    @*Div permettant de modifier le code postal du lieu de l'utilisateur*@
    <div>
        @Html.LabelFor(model => model.Lieu.CodePostal, htmlAttributes: new { @class = "control-label" })*
        @Html.EditorFor(model => model.Lieu.CodePostal, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
    </div>

    @*Div permettant de modifier la ville du lieu de l'utilisateur*@
    <div>
        @Html.LabelFor(model => model.Lieu.Ville, htmlAttributes: new { @class = "control-label" })*
        @Html.EditorFor(model => model.Lieu.Ville, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
    </div>

    @*Div permettant de modifier le pays du lieu de l'utilisateur*@
    <div>
        @Html.LabelFor(model => model.Lieu.Pays, htmlAttributes: new { @class = "control-label" })*
        @Html.EditorFor(model => model.Lieu.Pays, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
    </div>

    <hr class="separerEdit" />

    <button type="reset" value="cancel" title="Créer un Nouveau Devis" onclick="addNumero();" class="btn button-green">
        <i class="glyphicon glyphicon-plus"></i>
    </button>

    <div id="telephones">
        <h2>Numéros</h2>
    </div>

    @foreach (var item in Model.Utilisateur.Telephones)
    {
        <script type="text/javascript">
            addNumero("@item.Numéro", "@item.Préfixe");
        </script>
    }



    @*Si l'utilisateur modifie ses propres informations, il peut modifier son mot de passes*@
    @if (Model.Utilisateur.ID == HttpContext.Current.User.Identity.Name)
    {
        <hr class="separerEdit" />

        @*Div permettant de modifier le mot de passe de l'utilisateur*@
        <div>
            @Html.LabelFor(model => model.motDePasse, htmlAttributes: new { @class = "control-label" })
            @Html.PasswordFor(model => model.motDePasse, new { @class = "form-control" })
        </div>

        @*Div permettant de confirmer le nouveau mot de passe de l'utilisateur*@
        <div>
            @Html.LabelFor(model => model.confirmation, htmlAttributes: new { @class = "control-label" })
            @Html.PasswordFor(model => model.confirmation, new { @class = "form-control" })
        </div>
    }
    <hr class="separerEdit" />
    @*Bouton permettant de valider les modifications faites sur l'utilisateur*@
    <input type="submit" value="Sauvegarder" class="button button-orange" />
</div>
<br /><br />
}