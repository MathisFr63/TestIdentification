@*Vue permettant la modification d'un utilisateur*@
@model WebApplication1.ViewModels.UtilisateurViewModelConnection
@{
    ViewBag.Title = "Edit";
}

@*Chemin de retour*@
<ul class="breadcrumb" style="margin-bottom:0px;margin-top:0px">
    <li class="breadcrumb-item">
        <a href=@Url.Action("Index", "Utilisateurs")>Liste utilisateurs</a>
    </li>
    <li class="breadcrumb-item active">Modifier utilisateur</li>
</ul>



@*Formulaire permettant de modifier les champs voulus*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 class="titreCRUD">Modifier l'utilisateur @Html.DisplayFor(model => model.Utilisateur.Prénom) @Html.DisplayFor(model => model.Utilisateur.Nom)</h2>
        <hr class="separer" />
        <br />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*Div permettant la modification de l'identifiant (adresse e-mail) de l'utilisateur*@
        <div class="form-group">
            @Html.LabelFor(model => model.Utilisateur.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Utilisateur.ID, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Utilisateur.Nom, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Div permettant de modifier le nom de l'utilisateur*@
        <div class="form-group">
            @Html.LabelFor(model => model.Utilisateur.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Utilisateur.Nom, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Utilisateur.Nom, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Div permettant de modifier le prénom de l'utilisateur*@
        <div class="form-group">
            @Html.LabelFor(model => model.Utilisateur.Prénom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Utilisateur.Prénom, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Utilisateur.Prénom, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Div permettant de modifier le type de l'utilisateur*@
        <div class="form-group">
            @Html.LabelFor(model => model.Utilisateur.Type, htmlAttributes: new { @class = "control-label col-md-2", @required = "required" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(x => x.Utilisateur.Type, new { @class = "form-control" })
            </div>
        </div>


        @*Si l'utilisateur modifie ses propres informations, il peut modifier son mot de passes*@
        @if (Model.Utilisateur.ID == HttpContext.Current.User.Identity.Name)
        {
            @*Div permettant de modifier le mot de passe de l'utilisateur*@
            <div class="form-group">
                @Html.LabelFor(model => model.motDePasse, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.motDePasse, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.motDePasse, "", new { @class = "text-danger" })
                </div>
            </div>

            @*Div permettant de confirmer le nouveau mot de passe de l'utilisateur*@
            <div class="form-group">
                @Html.LabelFor(model => model.confirmation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.confirmation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.confirmation, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @*Bouton permettant de valider les modifications faites sur l'utilisateur*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-secondary py-3" />
            </div>
        </div>
    </div>
}