@*Vue permettant la création d'un utilisateur par un administrateur*@
@model WebApplication1.ViewModels.UtilisateurViewModelConnection

@{
    ViewBag.Title = "Create";
}

<p>
    @*Bouton de retour*@
    <a href=@Url.Action("Index","Utilisateurs") class="btn btn-info btn-lg">
        <span class="glyphicon glyphicon-arrow-left" />
    </a>
</p>

<h2>S'incrire</h2>

@*Formulaire permettant de remplir les champs nécessaires à la création d'un utilisateur*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*Div permettant de saisir l'identifiant (adresse e-mail) de l'utilisateur*@
        <div class="form-group">
            @Html.LabelFor(model => model.Utilisateur.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Utilisateur.ID, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Utilisateur.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Div permettant de saisir le mot de passe de l'utilisateur*@
        <div class="form-group">
            @Html.LabelFor(model => model.motDePasse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.motDePasse, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.motDePasse, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Div permettant de confirmer le mot de passe de l'utilisateur*@
        <div class="form-group">
            @Html.LabelFor(model => model.confirmation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.confirmation, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.confirmation, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Div permettant de saisir le nom de l'utilisateur*@
        <div class="form-group">
            @Html.LabelFor(model => model.Utilisateur.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Utilisateur.Nom, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @*@Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })*@
            </div>
        </div>

        @*Div permettant de saisir le prénom de l'utilisateur*@
        <div class="form-group">
            @Html.LabelFor(model => model.Utilisateur.Prénom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Utilisateur.Prénom, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @*@Html.ValidationMessageFor(model => model.Prénom, "", new { @class = "text-danger" })*@
            </div>
        </div>

        @*Div permettant de saisir le type de l'utilisateur (basique / admin)*@
        <div class="form-group">
            @Html.LabelFor(model => model.Utilisateur.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(x => x.Utilisateur.Type, new { @class = "form-control" })
            </div>
        </div>

        @*Bouton permettant de valider la création de l'utilisateurs*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
